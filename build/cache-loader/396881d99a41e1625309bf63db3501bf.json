{"remainingRequest":"/Users/jie/Desktop/workspace/knowledge-graph/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/jie/Desktop/workspace/knowledge-graph/node_modules/ts-loader/index.js??ref--9-3!/Users/jie/Desktop/workspace/knowledge-graph/node_modules/angular-router-loader/src/index.js!/Users/jie/Desktop/workspace/knowledge-graph/node_modules/tslint-loader/index.js!/Users/jie/Desktop/workspace/knowledge-graph/src/main/webapp/app/entities/kg/kg.service.ts","dependencies":[{"path":"/Users/jie/Desktop/workspace/knowledge-graph/src/main/webapp/app/entities/kg/kg.service.ts","mtime":1573818222769},{"path":"/Users/jie/Desktop/workspace/knowledge-graph/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/jie/Desktop/workspace/knowledge-graph/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jie/Desktop/workspace/knowledge-graph/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jie/Desktop/workspace/knowledge-graph/node_modules/ts-loader/index.js","mtime":1545640398000},{"path":"/Users/jie/Desktop/workspace/knowledge-graph/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/jie/Desktop/workspace/knowledge-graph/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar http_1 = require(\"@angular/common/http\");\nvar operators_1 = require(\"rxjs/operators\");\nvar app_constants_1 = require(\"app/app.constants\");\nvar shared_1 = require(\"app/shared\");\nvar KgService = /** @class */ (function () {\n    function KgService(http) {\n        this.http = http;\n        this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/kgSearch';\n    }\n    KgService.prototype.create = function (first) {\n        return this.http.post(this.resourceUrl, first, { observe: 'response' });\n    };\n    KgService.prototype.update = function (first) {\n        return this.http.put(this.resourceUrl, first, { observe: 'response' });\n    };\n    KgService.prototype.find = function (id) {\n        return this.http.get(this.resourceUrl + \"/\" + id, { observe: 'response' });\n    };\n    KgService.prototype.query = function (req) {\n        var options = shared_1.createRequestOption(req);\n        return this.http.get(this.resourceUrl, { params: options, observe: 'response' });\n    };\n    KgService.prototype.delete = function (id) {\n        return this.http.delete(this.resourceUrl + \"/\" + id, { observe: 'response' });\n    };\n    KgService.prototype.uploadFile = function (formdata) {\n        console.log(formdata);\n        var req = new http_1.HttpRequest('POST', this.resourceUrl + '/uploadFile', formdata, {\n        // reportProgress: true\n        });\n        this.http\n            .request(req)\n            .pipe(operators_1.filter(function (e) { return e instanceof http_1.HttpResponse; }))\n            .subscribe(function (event) {\n        }, function (err) {\n        });\n        // return this.http.post<any>(this.resourceUrl+'/uploadFile', file, { observe: 'response'});\n    };\n    var _a;\n    KgService = tslib_1.__decorate([\n        core_1.Injectable({ providedIn: 'root' }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _a : Object])\n    ], KgService);\n    return KgService;\n}());\nexports.KgService = KgService;\n",{"version":3,"file":"/Users/jie/Desktop/workspace/knowledge-graph/src/main/webapp/app/entities/kg/kg.service.ts","sourceRoot":"","sources":["/Users/jie/Desktop/workspace/knowledge-graph/node_modules/angular-router-loader/src/index.js!/Users/jie/Desktop/workspace/knowledge-graph/node_modules/tslint-loader/index.js!/Users/jie/Desktop/workspace/knowledge-graph/src/main/webapp/app/entities/kg/kg.service.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAG3C,6CAA6E;AAC7E,4CAAwC;AAExC,mDAAmD;AACnD,qCAAiD;AAOjD;IAGI,mBAAsB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF/B,gBAAW,GAAG,8BAAc,GAAG,cAAc,CAAC;IAEZ,CAAC;IAE1C,0BAAM,GAAN,UAAO,KAAa;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,IAAI,CAAC,WAAW,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACpF,CAAC;IAED,0BAAM,GAAN,UAAO,KAAa;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,WAAW,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACnF,CAAC;IAED,wBAAI,GAAJ,UAAK,EAAU;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,IAAI,CAAC,WAAW,SAAI,EAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACvF,CAAC;IAED,yBAAK,GAAL,UAAM,GAAS;QACX,IAAM,OAAO,GAAG,4BAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC/F,CAAC;IAED,0BAAM,GAAN,UAAO,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAS,IAAI,CAAC,WAAW,SAAI,EAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACvF,CAAC;IAED,8BAAU,GAAV,UAAW,QAAkB;QACzB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACtB,IAAM,GAAG,GAAG,IAAI,kBAAW,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,GAAC,aAAa,EAAE,QAAQ,EAAE;QAC1E,uBAAuB;SAC1B,CAAC,CAAC;QACH,IAAI,CAAC,IAAI;aACJ,OAAO,CAAC,GAAG,CAAC;aACZ,IAAI,CAAC,kBAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,YAAY,mBAAY,EAAzB,CAAyB,CAAC,CAAC;aAC5C,SAAS,CACN,UAAC,KAAS;QACV,CAAC,EACD,UAAA,GAAG;QACH,CAAC,CACJ,CAAC;QACN,4FAA4F;IAChG,CAAC;;IAzCQ,SAAS;QADrB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAIH,iBAAU,oBAAV,iBAAU;OAH7B,SAAS,CA2CrB;IAAD,gBAAC;CAAA,AA3CD,IA2CC;AA3CY,8BAAS","sourcesContent":["import { Injectable } from '@angular/core';\n// import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { filter } from 'rxjs/operators';\n\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/shared';\nimport { IFirst } from 'app/shared/model/first.model';\n\ntype EntityResponseType = HttpResponse<IFirst>;\ntype EntityArrayResponseType = HttpResponse<IFirst[]>;\n\n@Injectable({ providedIn: 'root' })\nexport class KgService {\n    public resourceUrl = SERVER_API_URL + 'api/kgSearch';\n\n    constructor(protected http: HttpClient) {}\n\n    create(first: IFirst): Observable<EntityResponseType> {\n        return this.http.post<IFirst>(this.resourceUrl, first, { observe: 'response' });\n    }\n\n    update(first: IFirst): Observable<EntityResponseType> {\n        return this.http.put<IFirst>(this.resourceUrl, first, { observe: 'response' });\n    }\n\n    find(id: number): Observable<EntityResponseType> {\n        return this.http.get<IFirst>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n    }\n\n    query(req?: any): Observable<EntityArrayResponseType> {\n        const options = createRequestOption(req);\n        return this.http.get<IFirst[]>(this.resourceUrl, { params: options, observe: 'response' });\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n    }\n\n    uploadFile(formdata: FormData): Observable<any> {\n        console.log(formdata);\n        const req = new HttpRequest('POST', this.resourceUrl+'/uploadFile', formdata, {\n            // reportProgress: true\n        });\n        this.http\n            .request(req)\n            .pipe(filter(e => e instanceof HttpResponse))\n            .subscribe(\n                (event: {}) => {\n                },\n                err => {\n                }\n            );\n        // return this.http.post<any>(this.resourceUrl+'/uploadFile', file, { observe: 'response'});\n    }\n\n}\n"]}]}